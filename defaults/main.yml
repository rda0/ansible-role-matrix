role_matrix: True
import_matrix_dependencies: True
import_matrix_users: True
import_matrix_synapse: True
import_matrix_synadm: True
import_matrix_media_repo: True
import_matrix_ma1sd: False
import_matrix_maubot: False
import_matrix_reminder_bot: False
import_matrix_webhook: False
import_matrix_heisenbridge: False

matrix_venv_python_virtualenv: env
matrix_venv_python_requirements: requirements.txt
matrix_venv_python_freeze: freeze.txt
matrix_venv_python_system_pkgs: False
matrix_venv_python_reinit: False
# specify name to archive (sync) venv and freeze as (example: python version)
matrix_venv_python_archive: ''
matrix_venv_python_remove_freeze: False

matrix_admin_email: ''
matrix_noreply_email: ''
matrix_admin_mxids: []
matrix_client_base_url: ''
matrix_system_users: []
matrix_groups: []
matrix_services_enabled: True

matrix_synapse_version: ''
matrix_synapse_trusted_key_servers_default: []
matrix_synapse_federation_domain_whitelist_default: []
matrix_synapse_instances: []
vault_matrix_synapse_instances: {}
matrix_synapse_rest_auth_provider_install: False
matrix_synapse_rest_auth_provider_git:
  repo: https://github.com/davidmehren/matrix-synapse-rest-password-provider
  update: False
  branch: module_api
  commit: b6bdebb

matrix_synadm_version: ''

matrix_media_repo_version: v1.2.13
matrix_media_repo_instances: []
vault_matrix_media_repo: {}

matrix_ma1sd_config: {}
vault_matrix_ma1sd: {}

matrix_maubot_version: ''
matrix_maubot_instances: []
vault_matrix_maubot_instances: {}
matrix_maubot_dependencies_default:
  - 'maubot{% if matrix_maubot_version %}=={{ matrix_maubot_version }}{% endif %}'
  - psycopg2
matrix_maubot_dependencies_plugins: []

matrix_reminder_bot_version: ''
matrix_reminder_bot: {}
vault_matrix_reminder_bot: {}

matrix_heisenbridge_version: ''
matrix_heisenbridge: {}

# private set_fact variable defaults (do not use in inventory)
_matrix_synapse_instances: []
_matrix_synapse_instances_defaults:
  admin_username_localpart: admin
  #admin_password: ''  #unused for now, default: loaded from vault_matrix_synapse_instances
  #admin_access_token: ''  #required by synadm, default: loaded from vault_matrix_synapse_instances
  log_level: INFO
  modules: []
  public_baseurl: ''
  synadm: False
  enabled: '{{ matrix_services_enabled }}'
  jemalloc: False
  presence: True
  allow_public_rooms_over_federation: False
  listeners:
    main: 8008
    metrics: ''
    replication: ''
  federation_client_minimum_tls_version: 1.2
  federation_domain_whitelist: '{{ matrix_synapse_federation_domain_whitelist_default }}'
  event_cache_size: 10K
  caches: {}
  database:
    name: sqlite3
    args:
      password: ''  # leave empty to use socket
      host: ''      # leave empty to use socket
      cp_min: 5
      cp_max: 10
  rc_joins: {}
  enable_media_repo: True
  turn_server: ''
  turn_shared_secret: ''
  turn_user_lifetime: 1h
  turn_allow_guests: True
  #registration_shared_secret: ''  #required, default: loaded from vault_matrix_synapse_instances
  allow_guest_access: False
  default_identity_server: ''
  auto_join_rooms: []
  auto_join_mxid_localpart: ''
  enable_metrics: False
  mau_stats_only: False
  limit_remote_rooms: {}
  report_stats: False
  report_stats_endpoint: ''
  app_service_config_files: []
  #signing_key: ''  #required, default: loaded from vault_matrix_synapse_instances
  #macaroon_secret_key: ''  #required, default: loaded from vault_matrix_synapse_instances
  #form_secret: ''  #required, default: loaded from vault_matrix_synapse_instances
  trusted_key_servers: '{{ matrix_synapse_trusted_key_servers_default }}'
  suppress_key_server_warning: False
  email: {}
  password_providers: []
  user_directory: {}
  stats: True  # needed for room directory
  server_notices: {}
  alias_creation_rules: []
  room_list_publication_rules: []
  workers: []
  federation_sender_instances: []
  stream_writers: {}
  pusher_instances: []
  update_user_directory_from_worker: ''
  worker_replication_secret: ''

_matrix_maubot_instances: []
_matrix_maubot_instances_defaults:
  enabled: '{{ matrix_services_enabled }}'
  unshared_secret: generate
  homeservers: []
